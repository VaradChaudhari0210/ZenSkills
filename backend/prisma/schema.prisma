generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email         String       @unique(map: "user_unique_1") @db.VarChar(100)
  password_hash String
  phone_number  String       @db.VarChar(13)
  created_date  DateTime     @db.Timestamptz(6)
  location      String
  name          String       @db.VarChar(50)
  is_deleted    Boolean
  status        UserStatus   @default(active)
  role          UserRole
  uid           String    @id @default(uuid()) // Change from BigInt to String (UUID)
  gender        gender_enum
  googleId      String?      @unique(map: "user_unique") @db.VarChar
  mentee        mentee[]
  mentor        mentor[]
}


model mentee {
  bio              String?
  mentee_id        BigInt             @id(map: "mentee_pk") @default(autoincrement())
  uid              String
  User             User               @relation(fields: [uid], references: [uid], onDelete: Cascade, map: "mentee_user_fk")
  mentee_interests mentee_interests[]
}

model mentee_interests {
  mentee_id           BigInt
  tag_id              BigInt
  mentee_interests_id BigInt @id(map: "mentee_interests_pk") @default(autoincrement())
  mentee              mentee @relation(fields: [mentee_id], references: [mentee_id], onDelete: Cascade, map: "mentee_interests_mentee_fk")
  tags                tags   @relation(fields: [tag_id], references: [tag_id], onDelete: Cascade, map: "mentee_interests_tags_fk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mentor {
  bio                        String?
  experience_years           Int                @default(0)
  mentor_id                  BigInt             @id(map: "mentor_pk") @default(autoincrement())
  uid                        String
  rating                     Float?             @db.Real
  number_of_mentees_mentored Int                @default(0)
  company                    String?            @db.VarChar(255)
  mentor_job_title           String             @db.VarChar(50)
  User                       User               @relation(fields: [uid], references: [uid], onDelete: Cascade, map: "mentor_user_fk")
  mentor_expertise           mentor_expertise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mentor_expertise {
  mentor_id           BigInt
  tag_id              BigInt
  mentor_expertise_id BigInt @id(map: "mentor_expertise_pk") @default(autoincrement())
  mentor              mentor @relation(fields: [mentor_id], references: [mentor_id], onDelete: Cascade, map: "mentor_expertise_mentor_fk")
  tags                tags   @relation(fields: [tag_id], references: [tag_id], onDelete: Cascade, map: "mentor_expertise_tags_fk")
}

model tags {
  tag_name         String             @unique(map: "tags_unique") @db.VarChar(100)
  tag_id           BigInt             @id(map: "tags_pk") @default(autoincrement())
  mentee_interests mentee_interests[]
  mentor_expertise mentor_expertise[]
}

enum gender_enum {
  male
  female
  other
  prefer_not_to_say
}

enum UserStatus {
  active
  inactive
  suspended
}

enum UserRole {
  admin
  mentor
  mentee
}